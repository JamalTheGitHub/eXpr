<%# VIDEO STREAM %>
  <button id="capture-button"class="btn btn-primary col-12 text-center" type="button" data-toggle="collapse" data-target="#collapseExample" aria-expanded="false" aria-controls="collapseExample">
    Capture the expiry date?
  </button>
  <div class="collapse" id="collapseExample">
        <div id="screenshot" style="text-align:center;">
            <img id="screenshot-img">
            <video autoplay="true" id="videoElement"></video>
            <p><button class="capture-button btn btn-primary btn-sm">Capture video</button> <button class="btn btn-primary btn-sm"id="stop-button" disabled=''>Stop</button></p>
            <p><button class="btn btn-primary btn-sm"id="screenshot-button" disabled="">Scan Expiry Date!</button></p>
                <div id="parsed-txt"></div>
        </div>
</div>

<script>

$( document ).ready(function() {

    // GROCERIES OCR START 
    const screenshotButton = document.querySelector('#screenshot-button');
    const img = document.querySelector('#screenshot img');
    const video = document.querySelector('#videoElement');
    const canvas = document.createElement('canvas');
    const parsed_txt = $('#parsed-txt')
    const expiry_date_form = $('#exp-date')
    const constraints = {
    video: {
            width: 400, 
            height: 200,
            facingMode: "environment" }
    };

    // THIS ACTIVATES THE CAMERA FUNCTION AND REQUESTS PERMISSSION FROM USER
    const captureVideoButton = document.querySelector('#capture-button');
    const stopVideoButton = document.querySelector('#stop-button')
    captureVideoButton.onclick = function() {
    navigator.mediaDevices.getUserMedia(constraints).
        then(handleSuccess);
    };

    function handleSuccess(stream) {
    screenshotButton.disabled = false;
    video.srcObject = stream;
    video.hidden = false;
    stopVideoButton.disabled = false;
    };

    stopVideoButton.onclick = function() {
    video.srcObject.getVideoTracks().forEach(track => track.stop());
        screenshotButton.disabled = true;
        stopVideoButton.disabled = true;
        captureVideoButton.disabled = false;
    }

    screenshotButton.onclick = function() {
        canvas.width = video.videoWidth;
        canvas.height = video.videoHeight;
        canvas.getContext('2d').drawImage(video, 0, 0);

        // Assign image data to the image tag
        img.src = canvas.toDataURL('image/png');

        // Stop all video streams.
        video.srcObject.getVideoTracks().forEach(track => track.stop());
        video.hidden = true

        // Handle POST request to API
        fetch('/ocr', {
            method: 'post',
            body: JSON.stringify({image: {base64: canvas.toDataURL('image/png')}}),
            headers: {
                'Content-Type': 'application/json',
                'X-CSRF-Token': Rails.csrfToken()
            },
            credentials: 'same-origin'
            }).then(function(response) {
            response.json().then(function(data){
                if ( (data.error == 1) ) {
                    parsed_txt.html("No readable date in the image")
                }
                else {
                    parsed_txt.html("<p>Expiry Date: " + data.date),
                    expiry_date_form.attr('value',data.date)
                }
            })
        })

    };
    // GROCERIES OCR END
    
});
</script>

<style>
#videoElement {
    width: 100%;
}
p {
    padding: 2px;
}
</style>

